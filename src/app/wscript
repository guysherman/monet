import subprocess
import waftools
import sys


libs = ['pthread', 'tga']
linkerflags = []
if sys.platform == 'darwin':
	linkerflags = ['-framework', 'GLUT', '-framework', 'OpenGL']

defines = ''

def options(opt):
	return


def configure(conf):
	conf.load('compiler_cxx')
	conf.load('cppcheck')
	conf.env.CXXFLAGS = ['-Wall', '-g', '-std=c++11']
	conf.check_cfg(package='glfw3', uselib_store='GLFW', args=['--cflags', '--libs'])
	conf.check_cfg(package='glew', uselib_store='GLEW', args=['--cflags', '--libs'])
	conf.check_cfg(package='freetype2', uselib_store='FT', args=['--cflags', '--libs'])
	conf.check_cfg(package='libpng', uselib_store='PNG', args=['--cflags', '--libs'])
	conf.check_cfg(package='glm', uselib_store='GLM', args=['--cflags', '--libs'])
	#conf.check_cfg(package='gtkmm-3.0', uselib_store='GTKMM', args=['--cflags', '--libs'])
	if sys.platform == 'darwin':
		conf.env.LIBPATH_BOOST = ['/usr/local/lib']
		conf.env.INCLUDES_BOOST = ['/usr/local/include']
		conf.env.LIBPATH_TGA = ['/usr/local/lib']
		conf.env.INCLUDES_TGA = ['/usr/local/include']
	else:
		conf.env.LIBPATH_BOOST = ['/usr/lib']
		conf.env.INCLUDES_BOOST = ['/usr/include']
		conf.env.LIBPATH_TGA = ['/usr/lib']
		conf.env.INCLUDES_TGA = ['/usr/include']


def build(bld):
	bld.program(source = bld.path.ant_glob('**/*.c*'),
				includes = ['./include'],
				cxxflags=['-pedantic-errors', '-fPIC', '-Werror', '-Wno-c++14-extensions'],
				ldflags=linkerflags,
				lib = libs,
				target = 'monet-photo',
				install_path = '${BINDIR}',
				use=['GLEW', 'GLFW', 'GLM', 'BOOST', 'FT', 'PNG', 'TGA', 'monet-ui', 'monet-renderer'],
				defines = defines,
				features="cxx cxxprogram")
